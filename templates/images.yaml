Conditions:
  ProjectAuthCodebuildArtifactsBucketCondition: !Equals
    - !Ref 'ProjectAuthCodebuildArtifactsBucketNameParameter'
    - ''
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups: []
    ParameterLabels: {}
Outputs:
  ProjectAuthPreSignupTriggerFunctionImage:
    Description: The image URI of the Pre-signup trigger Lambda function
    Export:
      Name: !Sub '${AWS::StackName}-pre-signup-trigger-function-image'
    Value: !Join
      - ':'
      - - !GetAtt 'ProjectAuthRepository.RepositoryUri'
        - pre-signup
  ProjectAuthUserMigrationTriggerFunctionImage:
    Description: The image URI of the User Migration Trigger Lambda function
    Export:
      Name: !Sub '${AWS::StackName}-user-migration-trigger-function-image'
    Value: !Join
      - ':'
      - - !GetAtt 'ProjectAuthRepository.RepositoryUri'
        - user-migration
Parameters:
  ProjectAuthCodebuildArtifactsBucketNameParameter:
    Default: ''
    Description: The name of the bucket to use for storing CodeBuild artifacts. If none specified, a bucket will be created.
    Type: String
  ProjectAuthSourceAccountParameter:
    Default: hms-dbmi
    Description: The name of the account containing the repository to build from
    Type: String
  ProjectAuthSourceBranchParameter:
    Default: master
    Description: The name of the repository branch to build from
    Type: String
  ProjectAuthSourceRepositoryParameter:
    Default: auth0-to-cognito
    Description: The name of the repository to build from
    Type: String
  ProjectAuthSourceTokenParameter:
    Description: The personal access token for the repository branch to build from
    NoEcho: true
    Type: String
Resources:
  ProjectAuthArtifactsBucket:
    Condition: ProjectAuthCodebuildArtifactsBucketCondition
    DeletionPolicy: Delete
    Properties:
      AccessControl: Private
      BucketName: !Join
        - '-'
        - - !Sub '${AWS::StackName}-codepipeline-artifacts'
          - !Select
            - 0
            - !Split
              - '-'
              - !Select
                - 2
                - !Split
                  - /
                  - !Ref 'AWS::StackId'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    Type: AWS::S3::Bucket
  ProjectAuthCodepipelineRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
                  - s3:GetObjectVersioning
                Effect: Allow
                Resource: !If
                  - ProjectAuthCodebuildArtifactsBucketCondition
                  - !Sub 'arn:aws:s3:::${ProjectAuthArtifactsBucket}/*'
                  - !Sub 'arn:aws:s3:::${ProjectAuthCodebuildArtifactsBucketNameParameter}/*'
            Version: '2012-10-17'
          PolicyName: !Sub '${AWS::StackName}-codepipeline-s3-policy'
        - PolicyDocument:
            Statement:
              - Action:
                  - ecr:BatchCheckLayerAvailability
                  - ecr:CompleteLayerUpload
                  - ecr:GetAuthorizationToken
                  - ecr:InitiateLayerUpload
                  - ecr:PutImage
                  - ecr:UploadLayerPart
                Effect: Allow
                Resource: !Sub 'arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${ProjectAuthRepository}*'
            Version: '2012-10-17'
          PolicyName: !Sub '${AWS::StackName}-codebuild-ecr-policy'
        - PolicyDocument:
            Statement:
              - Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Effect: Allow
                Resource: '*'
            Version: '2012-10-17'
          PolicyName: !Sub '${AWS::StackName}-codepipeline-codebuild-policy'
        - PolicyDocument:
            Statement:
              - Action:
                  - secretsmanager:GetSecretValue
                Effect: Allow
                Resource: !Ref 'ProjectAuthSourceTokenSecret'
          PolicyName: !Sub '${AWS::StackName}-codepipeline-secretsmanager-policy'
      RoleName: !Sub '${AWS::StackName}-codepipeline-role'
    Type: AWS::IAM::Role
  ProjectAuthPipeline:
    DependsOn:
      - ProjectAuthRepository
    Properties:
      ArtifactStores:
        - ArtifactStore:
            Location: !If
              - ProjectAuthCodebuildArtifactsBucketCondition
              - !Ref 'ProjectAuthArtifactsBucket'
              - !Ref 'ProjectAuthCodebuildArtifactsBucketNameParameter'
            Type: S3
          Region: !Ref 'AWS::Region'
      Name: !Sub '${AWS::StackName}'
      RoleArn: !GetAtt 'ProjectAuthCodepipelineRole.Arn'
      Stages:
        - Actions:
            - ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Branch: !Ref 'ProjectAuthSourceBranchParameter'
                OAuthToken: !Join
                  - ':'
                  - - '{{resolve:secretsmanager'
                    - !Ref 'ProjectAuthSourceTokenSecret'
                    - SecretString:token}}
                Owner: !Ref 'ProjectAuthSourceAccountParameter'
                Repo: !Ref 'ProjectAuthSourceRepositoryParameter'
              Name: SourceAction
              OutputArtifacts:
                - Name: !Sub '${AWS::StackName}-source-artifacts'
              RunOrder: 1
          Name: Source
        - Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref 'ProjectAuthUserMigrationTriggerProject'
              InputArtifacts:
                - Name: !Sub '${AWS::StackName}-source-artifacts'
              Name: CodeBuild
              RunOrder: 1
          Name: Build-User-Migration-Trigger
        - Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref 'ProjectAuthPreSignupTriggerProject'
              InputArtifacts:
                - Name: !Sub '${AWS::StackName}-source-artifacts'
              Name: CodeBuild
              RunOrder: 1
          Name: Build-Pre-Signup-Trigger
    Type: AWS::CodePipeline::Pipeline
  ProjectAuthPreSignupTriggerProject:
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Modes:
          - LOCAL_DOCKER_LAYER_CACHE
        Type: LOCAL
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Type: PLAINTEXT
            Value: !Ref 'AWS::Region'
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref 'AWS::AccountId'
          - Name: IMAGE_NAME
            Type: PLAINTEXT
            Value: !GetAtt 'ProjectAuthRepository.RepositoryUri'
          - Name: IMAGE_TAG
            Type: PLAINTEXT
            Value: pre-signup
          - Name: FUNCTION_FILENAME
            Type: PLAINTEXT
            Value: pre_signup_trigger.py
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      Name: !Sub '${AWS::StackName}-pre-signup-trigger-project'
      ServiceRole: !Ref 'ProjectAuthProjectRole'
      Source:
        Type: CODEPIPELINE
    Type: AWS::CodeBuild::Project
  ProjectAuthProjectRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - ecr:GetAuthorizationToken
                Effect: Allow
                Resource: '*'
            Version: '2012-10-17'
          PolicyName: !Sub '${AWS::StackName}-codebuild-ecr-token-policy'
        - PolicyDocument:
            Statement:
              - Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
                Effect: Allow
                Resource: !If
                  - ProjectAuthCodebuildArtifactsBucketCondition
                  - !Sub 'arn:aws:s3:::${ProjectAuthArtifactsBucket}/*'
                  - !Sub 'arn:aws:s3:::${ProjectAuthCodebuildArtifactsBucketNameParameter}/*'
            Version: '2012-10-17'
          PolicyName: !Sub '${AWS::StackName}-codebuild-s3-policy'
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*'
            Version: '2012-10-17'
          PolicyName: !Sub '${AWS::StackName}-codebuild-cloudwatch-policy'
        - PolicyDocument:
            Statement:
              - Action:
                  - ecr:BatchCheckLayerAvailability
                  - ecr:CompleteLayerUpload
                  - ecr:GetAuthorizationToken
                  - ecr:InitiateLayerUpload
                  - ecr:PutImage
                  - ecr:UploadLayerPart
                Effect: Allow
                Resource: !Sub 'arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${ProjectAuthRepository}*'
            Version: '2012-10-17'
          PolicyName: !Sub '${AWS::StackName}-codebuild-ecr-policy'
    Type: AWS::IAM::Role
  ProjectAuthRepository:
    Properties:
      LifecyclePolicy:
        LifecyclePolicyText: "\n                {\n                    \"rules\": [\n                        {\n                            \"rulePriority\": 1,\n                            \"description\"\
          : \"Expire untagged images older than 3 days\",\n                            \"selection\": {\n                                \"tagStatus\": \"untagged\",\n                                \"\
          countType\": \"sinceImagePushed\",\n                                \"countUnit\": \"days\",\n                                \"countNumber\": 3\n                            },\n             \
          \               \"action\": { \"type\": \"expire\" }\n                        }\n                    ]\n                }\n                "
      RepositoryName: !Sub '${AWS::StackName}-trigger'
      RepositoryPolicyText:
        Statement:
          - Action:
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
              - ecr:BatchCheckLayerAvailability
              - ecr:PutImage
              - ecr:InitiateLayerUpload
              - ecr:UploadLayerPart
              - ecr:CompleteLayerUpload
            Effect: Allow
            Principal:
              AWS:
                - !Join
                  - ''
                  - - 'arn:aws:iam::'
                    - !Ref 'AWS::AccountId'
                    - :root
            Sid: AllowPushPull
        Version: '2012-10-17'
    Type: AWS::ECR::Repository
  ProjectAuthSourceTokenSecret:
    Properties:
      Name: /hms/dbmi/auth0-to-cognito/github
      SecretString: !Sub "{\n                \"token\":\"${ProjectAuthSourceTokenParameter}\"\n            }"
    Type: AWS::SecretsManager::Secret
  ProjectAuthUserMigrationTriggerProject:
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Modes:
          - LOCAL_DOCKER_LAYER_CACHE
        Type: LOCAL
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Type: PLAINTEXT
            Value: !Ref 'AWS::Region'
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref 'AWS::AccountId'
          - Name: IMAGE_NAME
            Type: PLAINTEXT
            Value: !GetAtt 'ProjectAuthRepository.RepositoryUri'
          - Name: IMAGE_TAG
            Type: PLAINTEXT
            Value: user-migration
          - Name: FUNCTION_FILENAME
            Type: PLAINTEXT
            Value: user_migration_trigger.py
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      Name: !Sub '${AWS::StackName}-user-migratrion-trigger-project'
      ServiceRole: !Ref 'ProjectAuthProjectRole'
      Source:
        Type: CODEPIPELINE
    Type: AWS::CodeBuild::Project
